#! ./env/bin/python

if __name__ == "__main__":
    import sys
    MIN_PYTHON = (3, 6)
    if sys.version_info < MIN_PYTHON:
        sys.exit("Python %s.%s or later is required.\n" % MIN_PYTHON)

    import os
    lib_path = os.path.relpath('etmMVC/')
    sys.path.append(lib_path)

    from etmMVC.model import setup_logging, logger, about
    log_levels = [str(x) for x in range(1, 6)]

    loglevel = 2 # info
    homedir = os.path.expanduser("~")
    etmdir = os.path.normpath(os.path.join(homedir, ".etm-mv"))


    if len(sys.argv) > 1 and sys.argv[1] in log_levels:
        loglevel = sys.argv.pop(1)
    if len(sys.argv) > 1 and os.path.isdir(sys.argv[1]):
        etmdir = sys.argv.pop(1)

    logdir = os.path.normpath(os.path.join(etmdir, 'logs'))
    if not os.path.isdir(logdir):
        os.makedirs(logdir)

    backdir = os.path.normpath(os.path.join(etmdir, 'backups'))
    if not os.path.isdir(backdir):
        os.makedirs(backdir)

    setup_logging(loglevel, logdir)
    logger.info(about()[1])

    from etmMVC import options
    options.etmdir = etmdir

    from etmMVC import mytest
    mytest.x += 1

    # main(etmdir)

    if len(sys.argv) > 1:
        logger.debug(f"calling data.main with etmdir: {etmdir}, argv: {sys.argv}")
        from etmMVC.model import main
        main(etmdir, sys.argv)
        sys.exit()

    else:
        logger.debug(f"calling view.main with etmdir: {etmdir}")
        from etmMVC.view import main
        main(etmdir)

